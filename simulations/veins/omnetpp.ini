[General]
network = Scenario 								#nome do arquivo .ned


sim-time-limit = 200s									#duração da simulação

###################################################
########       Parâmetros do cenário       ########
###################################################

*.playgroundSizeX = 1000m								#tamanho do scenario
*.playgroundSizeY = 1000m								#...
*.playgroundSizeZ = 50m									#...

*.manager.launchConfig = xmldoc("../../../sumo_scenarios/SUMO-Manhattan-1km_x_1km/100_0.launchd.xml")
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.manager.typename = "siege.ScenarioManager"

###################################################
######    Parâmetros gerais da comunicação   ######
###################################################
*.connectionManager.sendDirect = true					#determina que as mensagens entre rádios serão entregues diretamente, sem passar por canais físicos simulados.
*.connectionManager.maxInterfDist = 260m				#esse valor indica até que distância os sinais de rádio ainda podem causar interferência
*.**.nic.phy80211p.usePropagationDelay = true			#ativa a consideração do atraso de propagação no modelo físico da interface wireless 802.11p
*.**.nic.phy80211p.useNoiseFloor = true					#ativa o uso de um ruído de fundo fixo (noise floor) na simulação do canal físico.
*.**.nic.phy80211p.noiseFloor = -98dBm					#define o valor fixo do nível de ruído de fundo.
*.**.nic.phy80211p.decider = xmldoc("config.xml")		#este parâmetro especifica que o decisor de recepção de pacotes deve ser configurado com base em um arquivo XML.
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")#define quais modelos de propagação analógica serão usados para calcular a potência do sinal recebido.
*.**.nic.phy80211p.minPowerLevel = -110dBm				#define o nível mínimo de potência para que o rádio escute aquele sinal como ruído ou possível pacote válido
*.**.nic.mac1609_4.txPower = 20mW						#define a potência de transmissão (txPower) da interface de rede sem fio.
*.**.nic.mac1609_4.bitrate = 6Mbps						#define o bitrate de transmissão (taxa de dados) da interface MAC para X megabits por segundo.

###################################################
##########       Parâmetros da RSU       ##########
###################################################
*.rsu[*].applType = "siege.DemoRSU11p"					#todas as RSUs vão executar esta aplicação

*.rsu[0].mobility.x = 200								#localização estática da RSU[0]
*.rsu[0].mobility.y = 200								#...
*.rsu[0].mobility.z = 3									#...

###################################################
##########     Parâmetros dos carros     ##########
###################################################
*.node[*].applType = "siege.Demo11p"					#todos os carros vão executar esta aplicação
*.node[*].veinsmobility.x = 0							#definem a posição inicial padrão de cada veículo
*.node[*].veinsmobility.y = 0							#a posição real dos veículos vem do SUMO via TraCI, então esses valores são geralmente sobrescritos. 
*.node[*].veinsmobility.z = 0							#mas são usados inicialmente até o primeiro update.
*.node[*].veinsmobility.setHostSpeed = false			#indica se o OMNeT++ vai ou não controlar a velocidade do nó (false = vem do SUMO)
#*.node[*0].veinsmobility.accidentCount = 1				#habilita 1 evento de acidente (parada)
#*.node[*0].veinsmobility.accidentStart = 73s			#define o tempo de início do acidente
#*.node[*0].veinsmobility.accidentDuration = 50s		#define quanto tempo o veículo ficará parado

###################################################
##########     Parâmetros do fugitivo    ##########
###################################################
*.fugitivo[*].applType = "siege.Fugitivo"
*.fugitivo[*].veinsmobility.x = 0
*.fugitivo[*].veinsmobility.y = 0
*.fugitivo[*].veinsmobility.z = 0
*.fugitivo[*].veinsmobility.setHostSpeed = false			#indica se o OMNeT++ vai ou não controlar a velocidade do nó (false = vem do SUMO)
